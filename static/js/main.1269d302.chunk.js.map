{"version":3,"sources":["assets/img/emilyz.jpg","components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/TaskList/GenericTasks.jsx","components/ErrorBoundary/GenericErrorBoundary.jsx","components/TaskList/TaskList.jsx","views/Dashboard.jsx","components/DataTable/GenericDataTable.jsx","views/Data.jsx","components/DataTable/CollectorDataTable.jsx","views/Collectors.jsx","views/UserProfile.jsx","views/Typography.jsx","routes.js","layouts/Admin/Admin.jsx","components/Sidebar/PublicSidebar.jsx","layouts/Public/Public.jsx","index.js","variables/charts.jsx","assets/img/anime3.png"],"names":["module","exports","__webpack_require__","p","AdminNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateColor","window","innerWidth","state","collapseOpen","setState","color","toggleCollapse","toggleModalSearch","modalSearch","addEventListener","removeEventListener","react_default","a","createElement","Fragment","reactstrap_es","className","classNames","expand","fluid","toggled","sidebarOpened","type","onClick","toggleSidebar","href","e","preventDefault","brandText","aria-expanded","aria-label","data-target","data-toggle","id","navbar","isOpen","nav","caret","right","tag","alt","src","require","to","activeClassName","modalClassName","toggle","placeholder","data-dismiss","React","Component","Footer","Date","getFullYear","rel","target","Sidebar","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","assertThisInitialized","routeName","location","pathname","indexOf","_this2","_this$props","bgColor","routes","rtlActive","data","ref","map","prop","key","redirect","layout","path","pro","NavLink","icon","rtlName","name","defaultProps","GenericTasks","items","item","check","defaultValue","created","toDateString","text","GenericErrorBoundary","hasError","error","info","alert","error_message","children","TaskList","now","priority","handleChange","handleSubmit","onSubmit","htmlFor","length","onChange","value","ErrorBoundary_GenericErrorBoundary","TaskList_GenericTasks","newTask","concat","Dashboard","setBgChartData","bigChartData","xs","sm","active","size","defaultChecked","react_chartjs_2_es","chartExample1","options","lg","md","components_TaskList_TaskList","GenericDataTable","headers","header","colSpan","message","Data","DataTable_GenericDataTable","CollectorDataTable","toString","shortCode","createdAt","Collectors","buildFakeCollectors","DataTable_CollectorDataTable","UserProfile","disabled","cols","rows","Typography","component","Admin","getRoutes","Route","getBrandText","i","backgroundColor","history","action","scrollTop","scrollingElement","refs","mainPanel","components_Sidebar_Sidebar","assign","Navbars_AdminNavbar","Switch","components_Footer_Footer","PublicSidebar","togglePublicSidebar","Public","Sidebar_PublicSidebar","hist","createBrowserHistory","ReactDOM","render","Router","layouts_Admin_Admin","layouts_Public_Public","Redirect","from","getElementById","chart1_2_options","maintainAspectRatio","legend","display","tooltips","titleFontColor","bodyFontColor","bodySpacing","xPadding","mode","intersect","position","responsive","scales","yAxes","barPercentage","gridLines","drawBorder","zeroLineColor","ticks","suggestedMin","suggestedMax","padding","fontColor","xAxes","data1","canvas","gradientStroke","getContext","createLinearGradient","addColorStop","labels","datasets","label","fill","borderColor","borderWidth","borderDash","borderDashOffset","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","data2","data3","chartExample2","chartExample3","hoverBackgroundColor","chartExample4"],"mappings":"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","file":"static/js/main.1269d302.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/emilyz.9fcf69e5.jpg\";","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\n// reactstrap components\nimport {\n  Button,\n  Collapse,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  Input,\n  InputGroup,\n  NavbarBrand,\n  Navbar,\n  NavLink,\n  Nav,\n  Container,\n  Modal\n} from \"reactstrap\";\n\nclass AdminNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseOpen: false,\n      modalSearch: false,\n      color: \"navbar-transparent\"\n    };\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateColor);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateColor);\n  }\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n  updateColor = () => {\n    if (window.innerWidth < 993 && this.state.collapseOpen) {\n      this.setState({\n        color: \"bg-white\"\n      });\n    } else {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    }\n  };\n  // this function opens and closes the collapse on small devices\n  toggleCollapse = () => {\n    if (this.state.collapseOpen) {\n      this.setState({\n        color: \"navbar-transparent\"\n      });\n    } else {\n      this.setState({\n        color: \"bg-white\"\n      });\n    }\n    this.setState({\n      collapseOpen: !this.state.collapseOpen\n    });\n  };\n  // this function is to open the Search modal\n  toggleModalSearch = () => {\n    this.setState({\n      modalSearch: !this.state.modalSearch\n    });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          className={classNames(\"navbar-absolute\", this.state.color)}\n          expand=\"lg\"\n        >\n          <Container fluid>\n            <div className=\"navbar-wrapper\">\n              <div\n                className={classNames(\"navbar-toggle d-inline\", {\n                  toggled: this.props.sidebarOpened\n                })}\n              >\n                <button\n                  className=\"navbar-toggler\"\n                  type=\"button\"\n                  onClick={this.props.toggleSidebar}\n                >\n                  <span className=\"navbar-toggler-bar bar1\" />\n                  <span className=\"navbar-toggler-bar bar2\" />\n                  <span className=\"navbar-toggler-bar bar3\" />\n                </button>\n              </div>\n              <NavbarBrand href=\"#pablo\" onClick={e => e.preventDefault()}>\n                {this.props.brandText}\n              </NavbarBrand>\n            </div>\n            <button\n              aria-expanded={false}\n              aria-label=\"Toggle navigation\"\n              className=\"navbar-toggler\"\n              data-target=\"#navigation\"\n              data-toggle=\"collapse\"\n              id=\"navigation\"\n              type=\"button\"\n              onClick={this.toggleCollapse}\n            >\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n              <span className=\"navbar-toggler-bar navbar-kebab\" />\n            </button>\n            <Collapse navbar isOpen={this.state.collapseOpen}>\n              <Nav className=\"ml-auto\" navbar>\n                <InputGroup className=\"search-bar\">\n                  <Button\n                    color=\"link\"\n                    data-target=\"#searchModal\"\n                    data-toggle=\"modal\"\n                    id=\"search-button\"\n                    onClick={this.toggleModalSearch}\n                  >\n                    <i className=\"tim-icons icon-zoom-split\" />\n                    <span className=\"d-lg-none d-md-block\">Search</span>\n                  </Button>\n                </InputGroup>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                  >\n                    <div className=\"notification d-none d-lg-block d-xl-block\" />\n                    <i className=\"tim-icons icon-sound-wave\" />\n                    <p className=\"d-lg-none\">Notifications</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink tag=\"li\">\n                      <DropdownItem className=\"nav-item\">\n                        Another one\n                      </DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <UncontrolledDropdown nav>\n                  <DropdownToggle\n                    caret\n                    color=\"default\"\n                    data-toggle=\"dropdown\"\n                    nav\n                    onClick={e => e.preventDefault()}\n                  >\n                    <div className=\"photo\">\n                      <img alt=\"...\" src={require(\"assets/img/anime3.png\")} />\n                    </div>\n                    <b className=\"caret d-none d-lg-block d-xl-block\" />\n                    <p className=\"d-lg-none\">Log out</p>\n                  </DropdownToggle>\n                  <DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n                    <NavLink\n                        to=\"/public/home\"\n                        className=\"nav-link\"\n                        activeClassName=\"active\"\n                        tag=\"li\">\n                      <DropdownItem className=\"nav-item\">Log out</DropdownItem>\n                    </NavLink>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n                <li className=\"separator d-lg-none\" />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n\n\n        <Modal\n          modalClassName=\"modal-search\"\n          isOpen={this.state.modalSearch}\n          toggle={this.toggleModalSearch}\n        >\n          <div className=\"modal-header\">\n            <Input id=\"inlineFormInputGroup\" placeholder=\"SEARCH\" type=\"text\" />\n            <button\n              aria-label=\"Close\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              type=\"button\"\n              onClick={this.toggleModalSearch}\n            >\n              <i className=\"tim-icons icon-simple-remove\" />\n            </button>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AdminNavbar;\n","/*eslint-disable*/\nimport React from \"react\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\n// reactstrap components\nimport { Container, Row, Nav, NavItem, NavLink } from \"reactstrap\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n        <Container fluid>\n\n          <div className=\"copyright\">\n            © {new Date().getFullYear()} made with{\" \"}\n            <i className=\"tim-icons icon-heart-2\" /> by{\" \"}\n            <a\n              href=\"javascript:void(0)\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              Creative Tim\n            </a>{\" \"}\n            for a better web.\n          </div>\n        </Container>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\n\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n\n  render() {\n    const { bgColor, routes, rtlActive } = this.props;\n\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n\n          <Nav>\n            {/* Build the sidebar nav items using the routes defined in routes.js*/}\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              if (prop.layout === \"/admin\") {\n                  return (\n                      <li\n                          className={\n                              this.activeRoute(prop.path) +\n                              (prop.pro ? \" active-pro\" : \"\")\n                          }\n                          key={key}\n                      >\n                        <NavLink\n                            to={prop.layout + prop.path}\n                            className=\"nav-link\"\n                            activeClassName=\"active\"\n                            onClick={this.props.toggleSidebar}\n                        >\n                          <i className={prop.icon}/>\n                          <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                        </NavLink>\n                      </li>\n                  );\n              } else {\n                return null;\n              }\n            })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Initialize the Sidebar Component with sensible default properties\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\n\n// Check the data types of the Sidebar properties\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\"]),\n  routes: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default Sidebar;\n","/*eslint-disable*/\nimport React from \"react\";\n\nimport { Table, FormGroup, Label, Input } from \"reactstrap\";\n\nclass GenericTasks extends React.Component {\n    render() {\n        return (\n            <div className=\"table-full-width\">\n                <Table>\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th>ID</th>\n                            <th>Due</th>\n                            <th>Task</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.items.map(item => (\n                            <tr key={item.id}>\n                                <td>\n                                    <FormGroup check>\n                                        <Label check>\n                                            <Input defaultValue=\"0\" type=\"checkbox\" />\n                                            <span className=\"form-check-sign\">\n                                                <span className=\"check\" />\n                                            </span>\n                                        </Label>\n                                    </FormGroup>\n                                </td>\n                                <td>\n                                    #{item.id}\n                                </td>\n                                <td>\n                                    {item.created.toDateString()}\n                                </td>\n                                <td>\n                                    <p className=\"title\">{item.text}</p>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n\n        );\n    }\n}\n\nexport default GenericTasks;\n\n","/*eslint-disable*/\nimport React from \"react\";\n\nclass GenericErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, info) {\n        // Throw an alert on an error... just for fun\n        alert(error, info);\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>{this.props.error_message}</h1>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default GenericErrorBoundary;\n","/*eslint-disable*/\nimport React from \"react\";\nimport GenericTasks from \"./GenericTasks\";\nimport GenericErrorBoundary from \"../ErrorBoundary/GenericErrorBoundary\";\n\n// reactstrap components\nimport { Input, Button, Label } from \"reactstrap\";\n\nclass TaskList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { items: [\n            {\n                text: \"Create your first collector\",\n                id: Date.now(),\n                priority: 10,\n                created: new Date()\n            },\n            {\n                text: \"Add collector to your web site\",\n                id: Date.now(),\n                priority: 10,\n                created: new Date()\n            },\n            {\n                text: \"Watch the data flow\",\n                id: Date.now(),\n                priority: 5,\n                created: new Date()\n            }], text: '' };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    render() {\n        return (\n            <>\n              <form onSubmit={this.handleSubmit}>\n                <Label htmlFor=\"new-task\">\n                  You have {this.state.items.length } open tasks.\n                </Label>\n                <Input\n                    id=\"new-task\"\n                    onChange={this.handleChange}\n                    value={this.state.text}\n                />\n                <Button className=\"btn-block\">\n                  Add New Task\n                </Button>\n              </form>\n              <GenericErrorBoundary error_message=\"It looks like a developer broke the Configuration task list\" >\n                <GenericTasks items={this.state.items} />\n              </GenericErrorBoundary>\n            </>\n        );\n    }\n\n    handleChange(e) {\n        this.setState({ text: e.target.value });\n    }\n\n    handleSubmit(e) {\n        // Stop event bubbling\n        e.preventDefault();\n\n        // If no text in task list field... then nothing to do\n        if (!this.state.text.length) {\n            return;\n        }\n\n        // Build new task from submitted text\n        const newTask = {\n            text: this.state.text,\n            id: Date.now(),\n            priority: 5,\n            created: new Date()\n        };\n\n        this.setState(state => ({\n            items: state.items.concat(newTask),\n            text: ''\n        }));\n    }\n}\n\nexport default TaskList;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n\nimport { NavLink, Link } from \"react-router-dom\";\n// react plugin used to create charts\nimport { Line, Bar } from \"react-chartjs-2\";\n\n// reactstrap components\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// core components\nimport {\n  chartExample1,\n  chartExample2,\n  chartExample3,\n  chartExample4\n} from \"variables/charts.jsx\";\n\n\nimport TaskList from \"../components/TaskList/TaskList\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bigChartData: \"data1\"\n    };\n  }\n  setBgChartData = name => {\n    this.setState({\n      bigChartData: name\n    });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col xs=\"12\">\n              <Card className=\"card-chart\">\n                <CardHeader>\n                  <Row>\n                    <Col className=\"text-left\" sm=\"6\">\n                      <h5 className=\"card-category\">Dynamix Collector KPIs</h5>\n                      <CardTitle tag=\"h2\">Dynamix Collector Stats</CardTitle>\n                    </Col>\n                    <Col sm=\"6\">\n                      <ButtonGroup\n                        className=\"btn-group-toggle float-right\"\n                        data-toggle=\"buttons\"\n                      >\n                        <Button\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data1\"\n                          })}\n                          color=\"info\"\n                          id=\"0\"\n                          size=\"sm\"\n                          onClick={() => this.setBgChartData(\"data1\")}\n                        >\n                          <input\n                            defaultChecked\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Collectors\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-single-02\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"1\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data2\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data2\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Objects\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-gift-2\" />\n                          </span>\n                        </Button>\n                        <Button\n                          color=\"info\"\n                          id=\"2\"\n                          size=\"sm\"\n                          tag=\"label\"\n                          className={classNames(\"btn-simple\", {\n                            active: this.state.bigChartData === \"data3\"\n                          })}\n                          onClick={() => this.setBgChartData(\"data3\")}\n                        >\n                          <input\n                            className=\"d-none\"\n                            name=\"options\"\n                            type=\"radio\"\n                          />\n                          <span className=\"d-none d-sm-block d-md-block d-lg-block d-xl-block\">\n                            Storage\n                          </span>\n                          <span className=\"d-block d-sm-none\">\n                            <i className=\"tim-icons icon-tap-02\" />\n                          </span>\n                        </Button>\n                      </ButtonGroup>\n                    </Col>\n                  </Row>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"chart-area\">\n                    <Line\n                      data={chartExample1[this.state.bigChartData]}\n                      options={chartExample1.options}\n                    />\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"6\" md=\"12\">\n\n              <Card className=\"card\">\n                <CardHeader>\n                  <h6 className=\"title d-inline\">Configuration Work</h6>\n                </CardHeader>\n                <CardBody>\n                  <TaskList />\n                </CardBody>\n              </Card>\n            </Col>\n            <Col lg=\"6\" md=\"12\">\n\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","/*eslint-disable*/\nimport React from \"react\";\n\nimport { Table } from \"reactstrap\";\n\nclass GenericDataTable extends React.Component {\n    render() {\n        if (this.props.items.length === 0) {\n            return (\n                <div className=\"table-full-width\">\n                    <Table>\n                        <thead>\n                        <tr>\n                            {this.props.headers.map(header => (\n                                <th className=\"text-left\">{header}</th>\n                            ))}\n                        </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td colSpan={this.props.headers.length}>\n                                    <h4>{this.props.message}</h4>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"table-full-width\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                {this.props.headers.map(header => (\n                                    <th>{header}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.props.items.map(item => (\n                            <tr key={item.id}>\n\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }\n    }\n}\n\nexport default GenericDataTable;\n\n","import React from \"react\";\nimport GenericDataTable from \"../components/DataTable/GenericDataTable\";\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Data extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {headers: [\"\", \"Name\", \"Active\", \"Shortcode\", \"Created At\"], items: []};\n  }\n\n  render() {\n    return (\n      // React.Fragment\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">My Collected Data</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <GenericDataTable headers={this.state.headers} items={this.state.items} message=\"Looks like you have not collected any data\"/>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Data;\n","/*eslint-disable*/\nimport React from \"react\";\n\nimport { Table } from \"reactstrap\";\n\nclass CollectorDataTable extends React.Component {\n    render() {\n        if (this.props.items.length === 0) {\n            return (\n                <div className=\"table-full-width\">\n                    <Table>\n                        <thead>\n                        <tr>\n                            {this.props.headers.map(header => (\n                                <th className=\"text-left\">{header}</th>\n                            ))}\n                        </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td colSpan={this.props.headers.length}>\n                                    <h4>{this.props.message}</h4>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"table-full-width\">\n                    <Table>\n                        <thead>\n                            <tr>\n                                {this.props.headers.map(header => (\n                                    <th>{header}</th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.props.items.map(item => (\n                            <tr key={item.id}>\n                                <td>{item.id}</td>\n                                <td>{item.name}</td>\n                                <td>{item.active.toString()}</td>\n                                <td>{item.shortCode}</td>\n                                <td>{item.createdAt.toDateString()}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }\n    }\n}\n\nexport default CollectorDataTable;\n\n","import React from \"react\";\n\nimport CollectorDataTable from \"../components/DataTable/CollectorDataTable\";\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Button,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass Collectors extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {headers: [\"\", \"Name\", \"Active\", \"Shortcode\", \"Created At\"], items: [] };\n    this.buildFakeCollectors = this.buildFakeCollectors.bind(this);\n  }\n\n  buildFakeCollectors() {\n    this.setState(state => ({\n        items: state.items.concat({\n            id: Date.now(),\n            name: \"Test Collector\",\n            active: true,\n            shortCode: \"COLLECTORONETEST\",\n            createdAt: new Date()\n        })\n    }));\n  }\n\n  render() {\n    return (\n      // React.Fragment\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">My Dynamix Collectors</CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Button className=\"btn-primary\" onClick={this.buildFakeCollectors}>Add A Collector</Button>\n                  <CollectorDataTable headers={this.state.headers} items={this.state.items} message=\"You do not have any collectors\"/>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Collectors;\n","import React from \"react\";\n\n// reactstrap components\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardText,\n  FormGroup,\n  Form,\n  Input,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass UserProfile extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"8\">\n              <Card>\n                <CardHeader>\n                  <h5 className=\"title\">Edit Profile</h5>\n                </CardHeader>\n                <CardBody>\n                  <Form>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"5\">\n                        <FormGroup>\n                          <label>Company (disabled)</label>\n                          <Input\n                            defaultValue=\"DySoCo, Inc.\"\n                            disabled\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-md-1\" md=\"3\">\n                        <FormGroup>\n                          <label>Username</label>\n                          <Input\n                            defaultValue=\"michael23\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label htmlFor=\"exampleInputEmail1\">\n                            Email address\n                          </label>\n                          <Input placeholder=\"mike@email.com\" type=\"email\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>First Name</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"Company\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"6\">\n                        <FormGroup>\n                          <label>Last Name</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Last Name\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"12\">\n                        <FormGroup>\n                          <label>Address</label>\n                          <Input\n                            defaultValue=\"Bld Mihail Kogalniceanu, nr. 8 Bl 1, Sc 1, Ap 09\"\n                            placeholder=\"Home Address\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col className=\"pr-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>City</label>\n                          <Input\n                            defaultValue=\"Mike\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"px-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Country</label>\n                          <Input\n                            defaultValue=\"Andrew\"\n                            placeholder=\"Country\"\n                            type=\"text\"\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col className=\"pl-md-1\" md=\"4\">\n                        <FormGroup>\n                          <label>Postal Code</label>\n                          <Input placeholder=\"ZIP Code\" type=\"number\" />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"8\">\n                        <FormGroup>\n                          <label>About Me</label>\n                          <Input\n                            cols=\"80\"\n                            defaultValue=\"Lamborghini Mercy, Your chick she so thirsty, I'm in\n                            that two seat Lambo.\"\n                            placeholder=\"Here can be your description\"\n                            rows=\"4\"\n                            type=\"textarea\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </Form>\n                </CardBody>\n                <CardFooter>\n                  <Button className=\"btn-fill\" color=\"primary\" type=\"submit\">\n                    Save\n                  </Button>\n                </CardFooter>\n              </Card>\n            </Col>\n            <Col md=\"4\">\n              <Card className=\"card-user\">\n                <CardBody>\n                  <CardText />\n                  <div className=\"author\">\n                    <div className=\"block block-one\" />\n                    <div className=\"block block-two\" />\n                    <div className=\"block block-three\" />\n                    <div className=\"block block-four\" />\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      <img\n                        alt=\"...\"\n                        className=\"avatar\"\n                        src={require(\"assets/img/emilyz.jpg\")}\n                      />\n                      <h5 className=\"title\">Mike Andrew</h5>\n                    </a>\n                    <p className=\"description\">Ceo/Co-Founder</p>\n                  </div>\n                  <div className=\"card-description\">\n                    Do not be scared of the truth because we need to restart the\n                    human foundation in truth And I love you like Kanye loves\n                    Kanye I love Rick Owens’ bed design but the back is...\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <div className=\"button-container\">\n                    <Button className=\"btn-icon btn-round\" color=\"facebook\">\n                      <i className=\"fab fa-facebook\" />\n                    </Button>\n                    <Button className=\"btn-icon btn-round\" color=\"twitter\">\n                      <i className=\"fab fa-twitter\" />\n                    </Button>\n                    <Button className=\"btn-icon btn-round\" color=\"google\">\n                      <i className=\"fab fa-google-plus\" />\n                    </Button>\n                  </div>\n                </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React from \"react\";\n\n// reactstrap components\nimport { Card, CardHeader, CardBody, CardTitle, Row, Col } from \"reactstrap\";\n\nclass Typography extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader className=\"mb-5\">\n                  <h5 className=\"card-category\">Black Table Heading</h5>\n                  <CardTitle tag=\"h3\">\n                    Created using Poppins Font Family\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"typography-line\">\n                    <h1>\n                      <span>Header 1</span>\n                      The Life of Black Dashboard React\n                    </h1>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h2>\n                      <span>Header 2</span>\n                      The Life of Black Dashboard React\n                    </h2>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h3>\n                      <span>Header 3</span>\n                      The Life of Black Dashboard React\n                    </h3>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h4>\n                      <span>Header 4</span>\n                      The Life of Black Dashboard React\n                    </h4>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h5>\n                      <span>Header 5</span>\n                      The Life of Black Dashboard React\n                    </h5>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h6>\n                      <span>Header 6</span>\n                      The Life of Black Dashboard React\n                    </h6>\n                  </div>\n                  <div className=\"typography-line\">\n                    <p>\n                      <span>Paragraph</span>\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers. I\n                      understand culture. I am the nucleus. I think that’s a\n                      responsibility that I have, to push possibilities, to show\n                      people, this is the level that things could be at.\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Quote</span>\n                    <blockquote>\n                      <p className=\"blockquote blockquote-primary\">\n                        \"I will be the leader of a company that ends up being\n                        worth billions of dollars, because I got the answers. I\n                        understand culture. I am the nucleus. I think that’s a\n                        responsibility that I have, to push possibilities, to\n                        show people, this is the level that things could be at.\"{\" \"}\n                        <br />\n                        <br />\n                        <small>- Noaa</small>\n                      </p>\n                    </blockquote>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Muted Text</span>\n                    <p className=\"text-muted\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Primary Text</span>\n                    <p className=\"text-primary\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Info Text</span>\n                    <p className=\"text-info\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Success Text</span>\n                    <p className=\"text-success\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Warning Text</span>\n                    <p className=\"text-warning\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Danger Text</span>\n                    <p className=\"text-danger\">\n                      I will be the leader of a company that ends up being worth\n                      billions of dollars, because I got the answers...\n                    </p>\n                  </div>\n                  <div className=\"typography-line\">\n                    <h2>\n                      <span>Small Tag</span>\n                      Header with small subtitle <br />\n                      <small>Use \"small\" tag for the headers</small>\n                    </h2>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Lists</span>\n                    <Row>\n                      <Col md=\"3\">\n                        <h5>Unordered List</h5>\n                        <ul>\n                          <li>List Item</li>\n                          <li>List Item</li>\n                          <li className=\"list-unstyled\">\n                            <ul>\n                              <li>List Item</li>\n                              <li>List Item</li>\n                              <li>List Item</li>\n                            </ul>\n                          </li>\n                          <li>List Item</li>\n                        </ul>\n                      </Col>\n                      <Col md=\"3\">\n                        <h5>Ordered List</h5>\n                        <ol>\n                          <li>List Item</li>\n                          <li>List Item</li>\n                          <li>List item</li>\n                          <li>List Item</li>\n                        </ol>\n                      </Col>\n                      <Col md=\"3\">\n                        <h5>Unstyled List</h5>\n                        <ul className=\"list-unstyled\">\n                          <li>List Item</li>\n                          <li>List Item</li>\n                          <li>List item</li>\n                          <li>List Item</li>\n                        </ul>\n                      </Col>\n                      <Col md=\"3\">\n                        <h5>Inline List</h5>\n                        <ul className=\"list-inline\">\n                          <li className=\"list-inline-item\">List1</li>\n                          <li className=\"list-inline-item\">List2</li>\n                          <li className=\"list-inline-item\">List3</li>\n                        </ul>\n                      </Col>\n                    </Row>\n                  </div>\n                  <div className=\"typography-line\">\n                    <span>Code</span>\n                    <p>\n                      This is <code>.css-class-as-code</code>\n                      , an example of an inline code element. Wrap inline code\n                      within a <code>{`<code>...</code>`}</code>\n                      tag.\n                    </p>\n                    <pre>\n                      1. #This is an example of preformatted text.<br />\n                      2. #Here is another line of code\n                    </pre>\n                  </div>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Typography;\n","import Dashboard from \"views/Dashboard.jsx\";\nimport Data from \"views/Data.jsx\";\nimport Collectors from \"views/Collectors.jsx\";\nimport UserProfile from \"views/UserProfile.jsx\";\nimport Typography from \"views/Typography\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/collectors\",\n    name: \"Collectors\",\n    rtlName: \"الرموز\",\n    icon: \"tim-icons icon-atom\",\n    component: Collectors,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/data\",\n    name: \"Data\",\n    rtlName: \"خرائط\",\n    icon: \"tim-icons icon-puzzle-10\",\n    component: Data,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/profile\",\n    name: \"My Profile\",\n    rtlName: \"خرائط\",\n    icon: \"tim-icons icon-user-run\",\n    component: UserProfile,\n    layout: \"/admin\"\n  },\n  {\n    path: \"/home\",\n    name: \"Home\",\n    rtlName: \"خرائط\",\n    icon: \"tim-icons icon-user-run\",\n    component: Typography,\n    layout: \"/public\"\n  },\n    {\n      path: \"/admin\",\n      name: \"Admin\",\n      rtlName: \"خرائط\",\n      icon: \"tim-icons icon-chart-pie-36\",\n      component: Typography,\n      layout: \"/public\"\n    }\n];\nexport default routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// core Admin Layout components\nimport AdminNavbar from \"components/Navbars/AdminNavbar.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\n// Universal list of routes\nimport routes from \"routes.js\";\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    // Set the state of the Admin Layout Component\n    this.state = {\n      backgroundColor: \"blue\",\n      // Check to see if the sidebar has been toggled \"open\"\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n\n  // Use when you need to do something when the component loads\n  componentDidMount() {}\n\n  // Use when you need to do something when the component is about to leave the DOM\n  // Generally used to undo what was done in the componentDidMount function\n  componentWillUnmount() {}\n\n  // Use to do something when the component is updated\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      // When the history is updated... ensure the scroll is reset\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  // this function opens and closes the sidebar on small devices\n  toggleSidebar = () => {\n    document.documentElement.classList.toggle(\"nav-open\");\n    this.setState({ sidebarOpened: !this.state.sidebarOpened });\n  };\n\n  getRoutes = routes => {\n    // Loop through the routes\n    return routes.map((prop, key) => {\n      // Check if route uses the Admin layout\n      if (prop.layout === \"/admin\") {\n        return (\n          // Add the relevant route (react-router) to the app\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else if (prop.layout === \"/public\") {\n        return null;\n      } else {\n        // DO not return routes that do not use the Admin Layout\n        return null;\n      }\n    });\n  };\n\n  getBrandText = path => {\n    // Loop through routes (as defined in routes.js\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        // Find the route that matches the current browser location\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        // Return the name of the current route\n        return routes[i].name;\n      }\n    }\n    // If no route matches the current location... return some generic text\n    return \"DySoCo\";\n  };\n\n  render() {\n    return (\n      // This is a React.Fragment\n      // Use to group children without adding extra nodes to the DOM\n      <>\n        <div className=\"wrapper\">\n          <Sidebar\n            {...this.props}\n            routes={routes}\n            bgColor={this.state.backgroundColor}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <AdminNavbar\n              {...this.props}\n              brandText={this.getBrandText(this.props.location.pathname)}\n              toggleSidebar={this.toggleSidebar}\n              sidebarOpened={this.state.sidebarOpened}\n            />\n            <Switch>{this.getRoutes(routes)}</Switch>\n\n            <Footer fluid />\n\n          </div>\n        </div>\n\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// reactstrap components\nimport { Nav } from \"reactstrap\";\n\n\nclass PublicSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n\n  render() {\n    const { bgColor, routes, rtlActive } = this.props;\n\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n\n          <Nav>\n            {/* Build the PublicSidebar nav items using the routes defined in routes.js*/}\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              if (prop.layout !== \"/admin\") {\n                  return (\n                      <li\n                          className={\n                              this.activeRoute(prop.path) +\n                              (prop.pro ? \" active-pro\" : \"\")\n                          }\n                          key={key}\n                      >\n                        <NavLink\n                            to={prop.layout + prop.path}\n                            className=\"nav-link\"\n                            activeClassName=\"active\"\n                            onClick={this.props.togglePublicSidebar}\n                        >\n                          <i className={prop.icon} />\n                          <p>{prop.name}</p>\n                        </NavLink>\n                      </li>\n                  )\n                } else {\n                  return null\n                }\n              })}\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Initialize the PublicSidebar Component with sensible default properties\nPublicSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\n\n// Check the data types of the PublicSidebar properties\nPublicSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\"]),\n  routes: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default PublicSidebar;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// core Public Layout components\nimport Footer from \"components/Footer/Footer.jsx\";\nimport PublicSidebar from \"components/Sidebar/PublicSidebar.jsx\";\n\n// Universal list of routes\nimport routes from \"routes.js\";\n\nclass Public extends React.Component {\n    constructor(props) {\n        super(props);\n        // Set the state of the Public Layout Component\n        this.state = {\n            backgroundColor: \"blue\",\n            // Check to see if the sidebar has been toggled \"open\"\n            sidebarOpened:\n                document.documentElement.className.indexOf(\"nav-open\") !== -1\n        };\n    }\n\n    // Use when you need to do something when the component loads\n    componentDidMount() {}\n\n    // Use when you need to do something when the component is about to leave the DOM\n    // Generally used to undo what was done in the componentDidMount function\n    componentWillUnmount() {}\n\n    // Use to do something when the component is updated\n    componentDidUpdate(e) {\n        if (e.history.action === \"PUSH\") {\n            // When the history is updated... ensure the scroll is reset\n            document.documentElement.scrollTop = 0;\n            document.scrollingElement.scrollTop = 0;\n            this.refs.mainPanel.scrollTop = 0;\n        }\n    }\n\n    // this function opens and closes the sidebar on small devices\n    toggleSidebar = () => {\n        document.documentElement.classList.toggle(\"nav-open\");\n        this.setState({ sidebarOpened: !this.state.sidebarOpened });\n    };\n\n    getRoutes = routes => {\n        // Loop through the routes\n        return routes.map((prop, key) => {\n            // Check if route uses the Public layout\n            if (prop.layout === \"/public\") {\n                return (\n                    // Add the relevant route (react-router) to the app\n                    <Route\n                        path={prop.layout + prop.path}\n                        component={prop.component}\n                        key={key}\n                    />\n                );\n            } else {\n                // DO not return routes that do not use the Public Layout\n                return null;\n            }\n        });\n    };\n\n    getBrandText = path => {\n        // Loop through routes (as defined in routes.js\n        for (let i = 0; i < routes.length; i++) {\n            if (\n                // Find the route that matches the current browser location\n            this.props.location.pathname.indexOf(\n                routes[i].layout + routes[i].path\n            ) !== -1\n            ) {\n                // Return the name of the current route\n                return routes[i].name;\n            }\n        }\n        // If no route matches the current location... return some generic text\n        return \"DySoCo\";\n    };\n\n    render() {\n        return (\n            // This is a React.Fragment\n            // Use to group children without adding extra nodes to the DOM\n            <>\n            <div className=\"wrapper\">\n                <PublicSidebar\n                    {...this.props}\n                    routes={routes}\n                    bgColor={this.state.backgroundColor}\n                    toggleSidebar={this.toggleSidebar}\n                />\n                <div\n                    className=\"main-panel\"\n                    ref=\"mainPanel\"\n                    data={this.state.backgroundColor}\n                >\n\n                    <Switch>{this.getRoutes(routes)}</Switch>\n\n                    <Footer fluid />\n\n                </div>\n            </div>\n\n            </>\n        );\n    }\n}\n\nexport default Public;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.jsx\";\nimport PublicLayout from \"layouts/Public/Public.jsx\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Route path=\"/public\" render={props => <PublicLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n","// ##############################\n// // // Chart variables\n// #############################\n\n// chartExample1 and chartExample2 options\nlet chart1_2_options = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    backgroundColor: \"#f5f5f5\",\n    titleFontColor: \"#333\",\n    bodyFontColor: \"#666\",\n    bodySpacing: 4,\n    xPadding: 12,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\"\n  },\n  responsive: true,\n  scales: {\n    yAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.0)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          suggestedMin: 60,\n          suggestedMax: 125,\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ],\n    xAxes: [\n      {\n        barPercentage: 1.6,\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(29,140,248,0.1)\",\n          zeroLineColor: \"transparent\"\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9a9a9a\"\n        }\n      }\n    ]\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nlet chartExample1 = {\n  data1: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100]\n        }\n      ]\n    };\n  },\n  data2: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120]\n        }\n      ]\n    };\n  },\n  data3: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\n        \"JAN\",\n        \"FEB\",\n        \"MAR\",\n        \"APR\",\n        \"MAY\",\n        \"JUN\",\n        \"JUL\",\n        \"AUG\",\n        \"SEP\",\n        \"OCT\",\n        \"NOV\",\n        \"DEC\"\n      ],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nlet chartExample2 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(29,140,248,0.2)\");\n    gradientStroke.addColorStop(0.4, \"rgba(29,140,248,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(29,140,248,0)\"); //blue colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [\n        {\n          label: \"Data\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#1f8ef1\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#1f8ef1\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#1f8ef1\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [80, 100, 70, 80, 120, 80]\n        }\n      ]\n    };\n  },\n  options: chart1_2_options\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nlet chartExample3 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(72,72,176,0.1)\");\n    gradientStroke.addColorStop(0.4, \"rgba(72,72,176,0.0)\");\n    gradientStroke.addColorStop(0, \"rgba(119,52,169,0)\"); //purple colors\n\n    return {\n      labels: [\"USA\", \"GER\", \"AUS\", \"UK\", \"RO\", \"BR\"],\n      datasets: [\n        {\n          label: \"Countries\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          hoverBackgroundColor: gradientStroke,\n          borderColor: \"#d048b6\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          data: [53, 20, 10, 80, 100, 45]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 60,\n            suggestedMax: 120,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n      xAxes: [\n        {\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(225,78,202,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\n// #########################################\n// // // used inside src/views/Dashboard.jsx\n// #########################################\nconst chartExample4 = {\n  data: canvas => {\n    let ctx = canvas.getContext(\"2d\");\n\n    let gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\n\n    gradientStroke.addColorStop(1, \"rgba(66,134,121,0.15)\");\n    gradientStroke.addColorStop(0.4, \"rgba(66,134,121,0.0)\"); //green colors\n    gradientStroke.addColorStop(0, \"rgba(66,134,121,0)\"); //green colors\n\n    return {\n      labels: [\"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\"],\n      datasets: [\n        {\n          label: \"My First dataset\",\n          fill: true,\n          backgroundColor: gradientStroke,\n          borderColor: \"#00d6b4\",\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: \"#00d6b4\",\n          pointBorderColor: \"rgba(255,255,255,0)\",\n          pointHoverBackgroundColor: \"#00d6b4\",\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: [90, 27, 60, 12, 80]\n        }\n      ]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n\n    tooltips: {\n      backgroundColor: \"#f5f5f5\",\n      titleFontColor: \"#333\",\n      bodyFontColor: \"#666\",\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(29,140,248,0.0)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            suggestedMin: 50,\n            suggestedMax: 125,\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ],\n\n      xAxes: [\n        {\n          barPercentage: 1.6,\n          gridLines: {\n            drawBorder: false,\n            color: \"rgba(0,242,195,0.1)\",\n            zeroLineColor: \"transparent\"\n          },\n          ticks: {\n            padding: 20,\n            fontColor: \"#9e9e9e\"\n          }\n        }\n      ]\n    }\n  }\n};\n\nmodule.exports = {\n  chartExample1, // in src/views/Dashboard.jsx\n  chartExample2, // in src/views/Dashboard.jsx\n  chartExample3, // in src/views/Dashboard.jsx\n  chartExample4 // in src/views/Dashboard.jsx\n};\n","module.exports = __webpack_public_path__ + \"static/media/anime3.bd6820f1.png\";"],"sourceRoot":""}